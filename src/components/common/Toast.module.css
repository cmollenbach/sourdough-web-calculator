/* src/components/common/Toast.module.css */

.toast {
  /* Base styles are applied by global .toast class in App.css */
  /* This module handles specific internal layout and interactions */
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-md); /* Ensure this uses your theme variable */
  margin-bottom: var(--spacing-sm); /* Space between toasts */
  min-width: 280px;
  max-width: 400px;
  word-break: break-word;

  /* Animation classes for show/hide controlled by Toast.js */
  opacity: 0;
  transform: translateX(100%); /* Start off-screen to the right */
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
}

.toastShow {
  opacity: 1;
  transform: translateX(0);
}

.toastIcon {
  margin-right: var(--spacing-sm);
  flex-shrink: 0;
  font-size: 1.1em; /* Example size for Unicode icons */
  /* Add styles for SVG icons if you use them */
}

.message {
  flex-grow: 1;
  font-size: 0.95rem;
  line-height: 1.4;
  color: inherit; /* Inherit color from parent .toast type class */
}

.closeButton {
  background: none;
  border: none;
  color: inherit; /* Inherits color from the toast's text color */
  opacity: 0.7;
  cursor: pointer;
  padding: var(--spacing-xs);
  margin-left: var(--spacing-md);
  font-size: 1.3em;
  line-height: 1;
  align-self: flex-start; /* Good for multi-line toasts */
}

.closeButton:hover {
  opacity: 1;
}

/*
  Type-specific styles (background, text color) are primarily driven by
  global classes like .toast.toast-info, .toast.toast-success from App.css.
  However, if you need module-specific overrides for text color within certain types:
*/
.warning {
  /* This class would be added alongside global .toast-warning if needed */
  /* For example, if global .toast-warning sets background, this can fine-tune text */
  color: var(--color-text); /* Ensuring warning text is dark for light orange background */
}
.warning .closeButton { /* Ensure close button is also dark on warning */
  color: var(--color-text);
}