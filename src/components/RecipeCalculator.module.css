/* src/components/RecipeCalculator.module.css */

/* Define custom properties scoped to the calculator layout, using global theme variables where possible */
.recipeCalculatorLayout {
    --main-section-padding: var(--spacing-lg); /* Using global spacing */
    --step-item-padding: var(--spacing-md);
    --step-item-margin-bottom: var(--spacing-md);
    --step-item-header-margin-bottom: var(--spacing-md);
    --step-item-input-group-margin-bottom: var(--spacing-sm);
    --step-item-input-gap: var(--spacing-sm);
    --step-item-numeric-input-max-width: 100px; /* Increased slightly */
    --step-item-label-padding-right: var(--spacing-sm);

    display: flex;
    flex-wrap: nowrap;
    gap: var(--spacing-lg);
    background-color: var(--color-surface); /* Use global variable */
    padding: var(--spacing-xl);             /* Use global variable */
    border-radius: var(--border-radius-medium);
    box-shadow: var(--box-shadow-medium);
    border: var(--border-default);
    margin: var(--spacing-lg) auto;
    max-width: 1200px; /* This can be a global app max-width or specific */
}

.recipeDetailsColumn {
    flex: 2 1 60%;
    min-width: 400px; /* Or adjust based on content */
    padding: var(--spacing-sm); /* Inner padding */
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
}

.stepsColumn {
    flex: 1 1 40%;
    min-width: 320px; /* Or adjust */
    padding: var(--spacing-sm); /* Inner padding */
    display: flex;
    flex-direction: column;
}

/* Headings and Messages */
/* .mainTitle - This class was likely intended for App.js's main title, not here */

.templateModeBanner {
  background-color: #fff9c4; /* Specific to this component, could be a theme variable if used elsewhere */
  color: #795548;
  padding: var(--spacing-sm) var(--spacing-lg);
  border-radius: var(--border-radius-small);
  text-align: center;
  border: 1px solid #ffecb3;
  box-shadow: var(--box-shadow-soft);
  margin-top: var(--spacing-lg);
}

.templateModeBanner p {
  margin: 0;
  font-size: var(--font-size-small);
  font-weight: 500; /* Or var(--font-weight-bold) if preferred */
}

.infoButton {
  margin-left: var(--spacing-xs); /* Reduced margin slightly */
  background: none;
  border: none;
  color: var(--color-text-muted); /* Changed to a more muted color */
  cursor: pointer;
  padding: 0;
  font-size: 0.8em; /* Reduced font size for the icon itself */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 1.3em;  /* Reduced width */
  height: 1.3em; /* Reduced height */
  border-radius: 50%;
  opacity: 0.7; /* Make it slightly less prominent by default */
  transition: opacity 0.2s ease-in-out, background-color 0.2s ease-in-out;
}

.infoButton:hover,
.infoButton:focus {
  /* Lighter background on hover/focus to match its subtlety */
  background-color: rgba(var(--color-primary-rgb), 0.05); /* Very subtle primary tint */
  opacity: 1; /* Full opacity on hover/focus */
  outline: none;
}

/* Feedback messages will now use global classes: .feedback-message, .feedback-message-error, etc. from App.css */
/* Remove .feedbackMessage, .feedbackMessageError, .feedbackMessageSuccess, .feedbackMessageInfo from here */

.authMessage, /* If specific layout needed, otherwise could be a global alert style */
.loadingMessage,
.infoMessage {
    padding: var(--spacing-md);
    text-align: center;
    color: var(--color-text-muted);
    font-size: var(--font-size-small);
    margin-bottom: var(--spacing-md);
    background-color: var(--color-secondary); /* Example for info/loading */
    border: 1px solid var(--color-border-light);
    border-radius: var(--border-radius-small);
}

/* Section Styling */
.inputsSection,
.resultsGroup,
.manageRecipesSection {
    border: var(--border-default);
    padding: var(--main-section-padding);
    border-radius: var(--border-radius-medium);
    background-color: var(--color-surface); /* Ensure it uses theme variable */
}

.inputsSection h3,
.resultsGroup h3,
.manageRecipesSection h3,
.stepsColumn h3 {
    margin-top: 0;
    margin-bottom: var(--spacing-lg);
    font-size: var(--font-size-large); /* Use theme variable */
    color: var(--color-primary-darker);
    text-align: left;
    border-bottom: var(--border-default);
    padding-bottom: var(--spacing-md);
}

/* Input Groups: General input styling comes from App.css */
/* These .inputGroup styles are for layout within this component */
.inputGroup {
    margin-bottom: var(--spacing-md);
}

/* Specific two-column layouts within RecipeCalculator sections */
.inputsSection .inputGroup.twoColumn {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    gap: var(--spacing-lg);
}
.inputsSection .inputGroup.twoColumn label { margin-bottom: 0; text-align: left; padding-right: 0; }
.inputsSection .inputGroup.twoColumn input[type="number"] { max-width: 120px; text-align: right; margin-left: auto; }

.manageRecipesSection .inputGroup.twoColumn {
    display: grid;
    grid-template-columns: minmax(150px, auto) 1fr; /* Adjusted for potentially longer labels */
    align-items: center;
    gap: var(--spacing-md);
}
.manageRecipesSection .inputGroup.twoColumn label { margin-bottom: 0; padding-right: var(--spacing-md); text-align: right; }


/* StepEditor specific input group styling for compactness and alignment */
.stepItemEditor .inputGroup {
    margin-bottom: var(--step-item-input-group-margin-bottom);
}
.stepItemEditor .inputGroup.twoColumn {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    gap: var(--step-item-input-gap);
}
.stepItemEditor .inputGroup.twoColumn label {
    margin-bottom: 0;
    padding-right: var(--step-item-label-padding-right);
    text-align: left;
    font-weight: var(--font-weight-normal); /* Labels in steps might be less prominent */
    white-space: nowrap;
}
.stepItemEditor .inputGroup.twoColumn input[type="number"] {
    max-width: var(--step-item-numeric-input-max-width);
    width: 100%;
    margin-left: auto;
    text-align: right;
}
.stepItemEditor .inputGroup textarea {
    min-height: 60px; /* Slightly more space for notes */
}


/* Recipe Management Specific Styling */
.actionsGroup {
    display: flex;
    gap: var(--spacing-md);
    margin-top: var(--spacing-lg);
    flex-wrap: wrap;
}
/* .buttonWithSpinner and .buttonSpinner are now global in App.css */
/* .mainActions button styling should come from global .btn and its variants */
/* Remove .buttonDanger, .buttonSecondary from here. Apply .btn .btn-danger etc. in JSX */

/* Results Group Styling */
.resultItem {
    display: flex;
    justify-content: space-between;
    padding: var(--spacing-sm) 0;
    font-size: 1rem;
}
.resultItem.total {
    font-weight: var(--font-weight-bold);
    font-size: 1.1rem; /* Could be var(--font-size-large) or similar */
    color: var(--color-primary-darker);
    border-top: var(--border-default);
    margin-top: var(--spacing-md);
    padding-top: var(--spacing-md);
}
.resultItem span:first-child {
    color: var(--color-text);
    font-weight: 500;
}
.resultItem span:last-child {
    font-weight: var(--font-weight-bold);
}

/* Steps Column (Right Column) */
.stepsManagementSection {
    margin-top: 0; /* h3 provides top margin */
    width: 100%;
    box-sizing: border-box;
}

.stepItemEditor {
    background-color: var(--color-surface); /* Consistent surface color */
    border: var(--border-default);
    padding: var(--step-item-padding);
    border-radius: var(--border-radius-medium); /* Consistent with other sections */
    box-shadow: var(--box-shadow-soft);
    margin-bottom: var(--step-item-margin-bottom);
}

.stepHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--step-item-header-margin-bottom);
}

.stepHeader h4 {
  margin: 0;
  display: flex;
  align-items: baseline; /* Changed from center to baseline for better alignment with mixed font sizes and select */
  gap: var(--spacing-xs); /* Potentially reduce gap if needed */
  font-size: 1.05rem; /* This is for the step name/select part */
  flex-grow: 1;
}

/* Add this new class */
.stepOrderText {
  font-size: var(--font-size-small, 0.9rem); /* Make step number smaller */
  font-weight: var(--font-weight-normal);   /* Make it less bold if h4 is bold */
  color: var(--color-text-muted);           /* Mute the color slightly */
  margin-right: var(--spacing-xs);          /* Add a little space after the colon */
}

.stepTypeSelect {
    flex-grow: 1;
    max-width: 220px; /* Allow a bit more space if needed */
    font-size: 0.9rem;
    padding: var(--spacing-sm); /* Use theme variable */
}

/* .removeStepBtn will now be <button className="btn btn-danger btn-small"> (example) */
/* Add .btn-small or similar utility in App.css if needed for smaller buttons */

/* .addStepButton will now be <button className="btn btn-primary"> or .btn-secondary, full width via wrapper div if needed */

.sortableStepDragActive {
    background-color: rgba(var(--color-primary-rgb), 0.1);
    border: 1px dashed var(--color-primary-darker);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Or var(--box-shadow-medium) */
}

/* Base Templates Section - Styling remains largely specific to this component's layout */
.baseTemplatesSection {
    background-color: var(--color-surface); /* Changed from alt to be consistent with other sections */
    border: var(--border-default);
    padding: var(--spacing-lg);
    border-radius: var(--border-radius-medium);
    margin-bottom: var(--spacing-xl);
    box-shadow: var(--box-shadow-soft);
}
.baseTemplatesSection h3 { /* Consistent with other section headers */
    margin-top: 0;
    margin-bottom: var(--spacing-lg);
    font-size: var(--font-size-large);
    color: var(--color-primary-darker);
    border-bottom: var(--border-default);
    padding-bottom: var(--spacing-md);
}
.templateIntroText {
    font-size: 0.95rem;
    color: var(--color-text-muted);
    margin-bottom: var(--spacing-lg);
    line-height: var(--line-height-base);
}
.templateCardsContainer {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--spacing-lg);
}
.templateCard {
    background-color: var(--color-surface);
    border: var(--border-default);
    border-radius: var(--border-radius-medium); /* Use medium for cards */
    padding: var(--spacing-lg);
    box-shadow: var(--box-shadow-soft);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    transition: box-shadow 0.2s ease-in-out, border-color 0.2s ease-in-out;
    cursor: pointer;
}
.templateCardActive {
    border-color: var(--color-primary-darker);
    box-shadow: var(--box-shadow-medium), 0 0 0 2px var(--color-primary-darker); /* Highlight active */
    background-color: rgba(var(--color-primary-rgb), 0.05); /* Subtle tint */
}
.templateCard:hover {
    box-shadow: var(--box-shadow-medium);
    border-color: var(--color-primary);
}
.templateCardContent { margin-bottom: var(--spacing-md); }
.templateCard h4 {
    margin-top: 0;
    margin-bottom: var(--spacing-sm);
    font-size: 1.1rem;
    color: var(--color-primary);
}
.templateCard p {
    font-size: var(--font-size-small);
    color: var(--color-text-muted);
    margin-bottom: var(--spacing-md);
    line-height: 1.5;
    flex-grow: 1;
}
/* .templateCardButton will now be <button className="btn btn-primary"> or similar global class */
/* In RecipeCalculator.module.css */
.dragHandle {
  display: inline-flex; /* Or flex */
  align-items: center;
  justify-content: center;
  padding: var(--spacing-xs) var(--spacing-sm);
  margin-right: var(--spacing-sm);
  cursor: grab;
  color: var(--color-text-muted);
  border: 1px solid transparent; /* Optional: for visual feedback on hover/active */
  border-radius: var(--border-radius-small);
}

.dragHandle:hover {
  background-color: var(--color-secondary);
}

.dragHandle:active {
  cursor: grabbing;
  background-color: var(--color-border-light);
}
/* Responsive adjustments (largely the same, ensure variables are used) */
@media (max-width: 1000px) {
    .recipeCalculatorLayout { flex-direction: column; gap: var(--spacing-lg); }
    .recipeDetailsColumn, .stepsColumn { min-width: 100%; flex-basis: auto; }
}
@media (max-width: 900px) {
    .templateCardsContainer { grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); }
}
@media (max-width: 600px) {
    .recipeCalculatorLayout { padding: var(--spacing-md); }
    .inputsSection .inputGroup.twoColumn,
    .manageRecipesSection .inputGroup.twoColumn,
    .stepItemEditor .inputGroup.twoColumn {
        grid-template-columns: 1fr;
    }
    .inputsSection .inputGroup.twoColumn label,
    .manageRecipesSection .inputGroup.twoColumn label,
    .stepItemEditor .inputGroup.twoColumn label {
        text-align: left;
        margin-bottom: var(--spacing-xs);
        padding-right: 0;
        white-space: normal;
    }
    .stepItemEditor .inputGroup.twoColumn input[type="number"] {
        max-width: none; width: 100%; margin-left: 0;
    }
    .inputsSection .inputGroup.twoColumn input[type="number"] { /* Ensure this allows full width too on mobile */
        max-width: none; width: 100%; margin-left: 0;
    }
    .stepHeader h4 { flex-direction: column; align-items: flex-start; font-size: 1rem; }
    .stepTypeSelect { width: 100%; max-width: none; margin-top: var(--spacing-sm); }
}